version: '3.4'

services:
  nitter:
    build:
      context: . # Build from the current directory
      dockerfile: Dockerfile.nitter-custom # Use our custom Dockerfile
    container_name: nitter
    hostname: nitter
    restart: unless-stopped
    environment:
      # Pass proxy settings from host to container if set
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTPS_PROXY}
      - NO_PROXY=${NO_PROXY}
      # Add any other Nitter-specific env vars needed for runtime config
      # Base URL might be needed if Nitter uses it internally
      - NITTER_BASE_URL=${NITTER_BASE_URL:-http://localhost:8080}
      # Explicitly set Redis host via environment variable
      - NITTER_REDIS_HOST=nitter-redis 
      - NITTER_REDIS_PORT=6379
    ports:
      - "127.0.0.1:8080:8080"
    volumes: 
      # Mount local configs to the WORKDIR inside the container
      - ./nitter.conf:/app/nitter/nitter.conf:ro # Mount read-only
      - ./sessions.jsonl:/app/nitter/sessions.jsonl:rw # Mount read-write if Nitter modifies it
    depends_on:
      - redis
    networks:
      - nitter-network

  redis:
    image: redis:alpine
    container_name: nitter-redis
    hostname: nitter-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    # Add redis.conf volume if custom redis config is needed
    # - ./redis.conf:/usr/local/etc/redis/redis.conf:ro 
    # command: redis-server /usr/local/etc/redis/redis.conf # Uncomment if using custom config
    networks:
      - nitter-network

volumes:
  redis-data:

networks:
  nitter-network: 